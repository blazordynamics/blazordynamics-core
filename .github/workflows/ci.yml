name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and Test with Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0'  # Specify your .NET version

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test and collect coverage
        run: dotnet test --configuration Release --no-restore --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput='./TestResults/' --collect "Code coverage" --logger trx
        # Use your preferred testing and coverage tools; this example uses coverlet

      - name: Setup SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=blazordynamics_blazordynamics-core
            -Dsonar.organization=blazordynamics
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
            -Dsonar.coverageReportPaths=**/coverage.opencover.xml
            -Dsonar.coverage.exclusions="samples/**/*.csproj, tst/**/*.csproj"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Scan
        run: sonar-scanner
