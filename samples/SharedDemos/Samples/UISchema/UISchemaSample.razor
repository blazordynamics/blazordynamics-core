@page "/samples/typed/UISchema-Sample"

@using BlazorDynamics.HTMLComponents.Extensions
@using Newtonsoft.Json.Linq;
@using BlazorDynamics.Core.Models;

@inherits SampleBasePage

<SampleDocumentation MarkDownFile="Samples.UISchema.UISchemaSample.razor.md" Data="@data" ShowPlaygroundButton="false">
    <BlazorDynamicsForm Components="@UserSettingsService.Components" Data="@data" Schema="@Schema" UISchema="@UISchema" ValueChanged="@Update"></BlazorDynamicsForm>
</SampleDocumentation>

@code
{

    private void Update()
    {
        StateHasChanged();
    }
    private string result = string.Empty;
    ComponentsList components { get; set; } = new HtmlComponentsProvider().GetComponents();
    JToken UISchema;
    JObject Schema;
    TestData data = new TestData() { name = "demo", birthDate = "none" };

  

    protected override Task OnInitializedAsync()
    {
        UISchema = JToken.Parse("{\"type\":\"HorizontalLayout\",\"elements\":[{\"type\":\"Control\",\"label\":\"Name\",\"scope\":\"#/properties/name\"},{\"type\":\"Control\",\"label\":\"Birth Date\",\"scope\":\"#/properties/birthDate\"}]}");
        Schema = JObject.Parse("{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"Schema for a recording\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"birthDate\":{\"type\":\"string\",\"format\":\"date-time\"}}}");
        return base.OnInitializedAsync();
    }

    public class TestData
    {
        public string name { get; set; }
        public string birthDate { get; set; }
    }
}